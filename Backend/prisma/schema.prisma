// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  username  String   @unique
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  posts      Post[]
  likes      Like[]
  comments   Comment[]
  followers  Follow[]  @relation(name: "followers")
  followings Follow[]  @relation(name: "followings")
  profileUrl Image?    @relation(name: "profileUrl")
}

model Post {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  userId      String   @db.ObjectId
  description String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  user     User      @relation(fields: [userId], references: [id])
  comments Comment[] @relation(name: "comments")
  likes    Like[]    @relation(name: "likes")
  images   Image[]   @relation(name: "images")
}

model Like {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  userId    String   @db.ObjectId
  postId    String   @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id])
  post Post @relation("likes", fields: [postId], references: [id])
}

model Comment {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  userId    String   @db.ObjectId
  postId    String   @db.ObjectId
  content   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  post Post @relation("comments", fields: [postId], references: [id])
  user User @relation(fields: [userId], references: [id])
}

model Follow {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  followerId  String   @db.ObjectId
  followingId String   @db.ObjectId
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  follower  User @relation("followers", fields: [followerId], references: [id])
  following User @relation("followings", fields: [followingId], references: [id])
}

model Image {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  userId    String?  @unique @db.ObjectId
  postId    String?  @db.ObjectId
  url       String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  post Post? @relation("images", fields: [postId], references: [id])
  user User? @relation("profileUrl", fields: [userId], references: [id])
}
